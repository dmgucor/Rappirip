package guis;

import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.awt.event.WindowListener;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTextField;
import javax.swing.SpringLayout;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.text.AbstractDocument;

import extras.LimitDocumentFilter;
import extras.SpringUtilities;

public class RegistroGUI {

	JFrame frame;
	GridBagConstraints constraints;
	JTextField usernameField;
	JTextField passwordField;
	JTextField nombreField;

	public RegistroGUI(JFrame loginFrame) {
		loginFrame.setVisible(false);

		//Inicializar atributos
		constraints = new GridBagConstraints();
		usernameField = new JTextField(20);
		passwordField = new JTextField(20);
		nombreField = new JTextField(30);
		
		//Configuración de la ventana
		frame = new JFrame();
		frame.setBounds(500, 200, 400, 500);
		frame.setResizable(false);
		frame.setLayout(new GridBagLayout());

		//configurar cierre de la ventana
		WindowListener exitListener = new WindowAdapter() {

			@Override
			public void windowClosing(WindowEvent e) {
				int confirm = JOptionPane.showOptionDialog(
						null, "¿Desea volver al inicio de sesión?", null, JOptionPane.YES_NO_OPTION, 
						JOptionPane.QUESTION_MESSAGE, null, new Object[] {"Aceptar", "Cancelar"}, "Cancelar");
				if (confirm == JOptionPane.NO_OPTION) {
				//	frame.dispatchEvent(new WindowEvent(frame, WindowEvent.WINDOW_CLOSING));
					loginFrame.setVisible(true);
				}
			}
		};
		frame.addWindowListener(exitListener);

		setFormaRegistro();

		frame.setVisible(true);
		frame.pack();


	}

	private void setFormaRegistro() {
		String[] labels = {"Usuario", "Constraseña","Nombre" };
		//Panel que contiene la forma
		JPanel panel = new JPanel(new SpringLayout());

		//Document listener para detectar cambios en los campos
		DocumentListener myDocListener = new MyDocListener();
		
		//Agregar labels y configurar textFields
		JLabel username = new JLabel(labels[0], JLabel.TRAILING);
		panel.add(username);
		((AbstractDocument)usernameField.getDocument()).setDocumentFilter(new LimitDocumentFilter(25));
		username.setLabelFor(usernameField);
		usernameField.getDocument().addDocumentListener(myDocListener);
		panel.add(usernameField);

		JLabel password = new JLabel(labels[1], JLabel.TRAILING);
		panel.add(password);
		((AbstractDocument)passwordField.getDocument()).setDocumentFilter(new LimitDocumentFilter(20));
		password.setLabelFor(passwordField);
		passwordField.getDocument().addDocumentListener(myDocListener);
		panel.add(passwordField);
		
		JLabel nombre = new JLabel(labels[2], JLabel.TRAILING);
		panel.add(nombre);
		((AbstractDocument)nombreField.getDocument()).setDocumentFilter(new LimitDocumentFilter(35));
		nombre.setLabelFor(nombreField);
		nombreField.getDocument().addDocumentListener(myDocListener);
		panel.add(nombreField);
		
		SpringUtilities.makeCompactGrid(panel,
				labels.length, 2, //rows, cols
				6, 6,        //initX, initY
				6, 6); 		//xPad, yPad

		constraints.gridx = 0;
		constraints.gridy = 0;
		
		frame.add(panel, constraints);
	}

	public class MyDocListener implements DocumentListener
	{

		public void changedUpdate(DocumentEvent e)
		{
			
		}

		public void insertUpdate(DocumentEvent e)
		{
			
		}

		public void removeUpdate(DocumentEvent e)
		{
			
		}

	}























}
